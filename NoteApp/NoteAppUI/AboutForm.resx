<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>