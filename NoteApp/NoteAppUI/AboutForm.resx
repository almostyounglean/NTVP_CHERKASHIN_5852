<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>